함수는 func키워드를 사용해서 정의한다. "->"를 사용해서 함수의 반환 타입을 지정한다.

func hello(name: String, time: Int) -> String {
  var string = ""
  for _ in 0..<time{
    string += "\(name)님 안녕하세요!\n"
      }
      return string
}
Swift에서는 독특하게 함수를 호출할 때 파라미터 이름을 함께 써주어야 한다.

hello(name: "jojungyun", time: 3)//jojungyun님 안녕하세요 x3

만약, 함수를 호출할 때 사용하는 파라미터 이름과 함수 내부에서 사용하는 파라미터 이름을 다르게 사용하고 싶으면 이렇게 할 수 있다.

func hello(to name: String, numberOfTimes time: int){
//to use 'name' and 'time' inside of the fuction
  for _ in 0..<time{
  print(name)
  }
 }
 hello(to: "jojungyun", numberOfTimes: 3) // 이곳에서는 to와 numberOfTimes를 사용한다.

파라미터 이름을 _로 정의하면 함수를 호출할 때 파라미터 이름을 생략할 수 있게 된다.
func hello(_ name: String, time: Int){
  // ...
}
hello("전수열", time: 3) // 'name:'이 생략됨

파라미터에 기본 값을 지정할 수 있음. 기본 값이 지정된 파라미터는 함수 호출 시 생략
func hello(name: Strong, time: Int = 1){
// ...
}
hello("전수열")

"..."을 사용하면 개수가 정해지지 않은 파라미터(Variadic Parameters)를 받을 수 있음.
func sum(_ numbers: Int...) -> Int {
  var sum = 0
  for number in numbers{
    sum += number
    }
    return sume
   }
   
   sum(1,2)
   sum(3,4,5)

Closure

end
